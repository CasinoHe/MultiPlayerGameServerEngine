name: Windows

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  VCPKG_DEFAULT_TRIPLET: x64-windows

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    # checkout repository and submodules
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    # get cmake
    - name: Get cmake
      uses: lukka/get-cmake@latest
    
    - name: find workspace
      run: find $RUNNER_WORKSPACE
      shell: bash

    # setup vcpkg for build artifacts
    - name: Setup
      uses: lukka/run-vcpkg@v10
      id: runvcpkg
      with:
        # This one is not needed, as it is the default value anyway.
        # vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgJsonGlob: '**/cmakepresets/vcpkg.json'

    - name: Prints output of run-vcpkg's action.
      run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_DEFAULT_TRIPLET_OUT }}' "

    - name: Build
      uses: lukka/run-cmake@v10
      id: runcmake
      with:
        cmakeListsTxtPath: '${{ github.workspace }}/cmakepresets/CMakeLists.txt'
        configurePreset: 'ninja-multi-vcpkg'
        buildPreset: 'ninja-multi-vcpkg'
        buildPresetAdditionalArgs: '[`--config Release`]'